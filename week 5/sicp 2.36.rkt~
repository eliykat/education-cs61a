; SICP 2.36

; copy accumulate function from p 158
(define (accumulate op initial sequence)
  (if (null? sequence)
      initial
      (op (car sequence)
          (accumulate op initial (cdr sequence)))))

(define (enumerate-cars seqs)
  (if (null? (cdr seqs))
      null
      (cons (car (car seqs))
            (enumerate-cars (cdr seqs)))))

(define (accumulate-n op init seqs)
  (if (null? (car seqs))
      null
      (cons (accumulate op init xx)
            (accumulate-n op init xx))))

(define test-seq '((1 2 3) (4 5 6) (7 8 9) (10 11 12)))